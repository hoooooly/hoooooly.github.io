{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/Kratos-Rebirth/source/css/kr-dark.min.css","path":"css/kr-dark.min.css","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/css/kratosr.min.css","path":"css/kratosr.min.css","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/css/prismjs.min.css","path":"css/prismjs.min.css","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/404.webp","path":"images/404.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/about.webp","path":"images/about.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/alipay.webp","path":"images/alipay.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/avatar.webp","path":"images/avatar.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/banner.webp","path":"images/banner.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/banner_dark.webp","path":"images/banner_dark.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/failure.ico","path":"images/failure.ico","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/bg.webp","path":"images/bg.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/logo.webp","path":"images/logo.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/my.webp","path":"images/my.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/psr.webp","path":"images/psr.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/sticky.webp","path":"images/sticky.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/wechat.webp","path":"images/wechat.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/js/candy.min.js","path":"js/candy.min.js","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/js/kr-dark.min.js","path":"js/kr-dark.min.js","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/js/kratosr.min.js","path":"js/kratosr.min.js","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/js/local-search.min.js","path":"js/local-search.min.js","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/js/pjax.min.js","path":"js/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/js/snow.min.js","path":"js/snow.min.js","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/css/highlight/night-blue.min.css","path":"css/highlight/night-blue.min.css","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/css/highlight/light.min.css","path":"css/highlight/light.min.css","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/css/highlight/night-bright.min.css","path":"css/highlight/night-bright.min.css","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/css/highlight/night-eighties.min.css","path":"css/highlight/night-eighties.min.css","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/css/highlight/night.min.css","path":"css/highlight/night.min.css","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_10.webp","path":"images/thumb/thumb_10.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_1.webp","path":"images/thumb/thumb_1.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_11.webp","path":"images/thumb/thumb_11.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_12.webp","path":"images/thumb/thumb_12.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_13.webp","path":"images/thumb/thumb_13.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_14.webp","path":"images/thumb/thumb_14.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_15.webp","path":"images/thumb/thumb_15.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_16.webp","path":"images/thumb/thumb_16.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_17.webp","path":"images/thumb/thumb_17.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_18.webp","path":"images/thumb/thumb_18.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_19.webp","path":"images/thumb/thumb_19.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_2.webp","path":"images/thumb/thumb_2.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_20.webp","path":"images/thumb/thumb_20.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_3.webp","path":"images/thumb/thumb_3.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_4.webp","path":"images/thumb/thumb_4.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_5.webp","path":"images/thumb/thumb_5.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_6.webp","path":"images/thumb/thumb_6.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_7.webp","path":"images/thumb/thumb_7.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_8.webp","path":"images/thumb/thumb_8.webp","modified":0,"renderable":1},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_9.webp","path":"images/thumb/thumb_9.webp","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/Hexo创建博客.md","hash":"3a88364bc975d7c12a96d1bd084bda0d7e07a327","modified":1620464342000},{"_id":"source/_posts/git常用命令.md","hash":"a32dd321ae06b6311b95a22dc0fc1144ee546564","modified":1620570884000},{"_id":"themes/Kratos-Rebirth/Kratos-Rebirth-Manual.md","hash":"bc118fd7bed88d006f5b79ed439b0633bac9971f","modified":1620458332000},{"_id":"themes/Kratos-Rebirth/LICENSE","hash":"1eba7caf09a39110ad2f542e3ed8700d1a69c6d3","modified":1620451968000},{"_id":"themes/Kratos-Rebirth/_config.yml","hash":"84544c70a62cfdece5e3c786746b091ea2bae22d","modified":1620491426000},{"_id":"themes/Kratos-Rebirth/gulpfile.js","hash":"0a7b0eb66e0f5dd368c7f2232ebc3064f205c5bf","modified":1620451968000},{"_id":"themes/Kratos-Rebirth/package.json","hash":"a6587a398e138fa280d8df8e803ea1117cdee172","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/languages/zh-CN.yml","hash":"08638ac462cbd495b612d4b131cb2a34180229cb","modified":1620451968000},{"_id":"themes/Kratos-Rebirth/layout/archive.ejs","hash":"8de88e53b499322599025da6395b6b4a8c489bad","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/category.ejs","hash":"5677b70953e6a33038a0e03eaa06e45c10ec7d73","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/index.ejs","hash":"c50d2ddae5c8f35ae015a6f7931aef9235809551","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/layout.ejs","hash":"b5ee6bc72a4b0499f0044aabc20a7866d7304a2e","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/page.ejs","hash":"e7d5671d342ac7c594b493d30cddcc15206cd5e6","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/post.ejs","hash":"805a2ebcca65292b21b2bb216747f0a9cc09eb40","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/tag.ejs","hash":"5677b70953e6a33038a0e03eaa06e45c10ec7d73","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/scripts/404.js","hash":"c8c2775fb0afe8b5d010a36dd50eaf6b72a36f77","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/scripts/check-update.js","hash":"645a1f30fa21237b256d5fa7c0a0923032728901","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/scripts/cdn-optimize-helpers.js","hash":"063a81cb5d2888f52c8190aae25c29e6de41172b","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/scripts/genconfig.js","hash":"bc3a7d5dd918fe1e4da17098e2f60a34e9cbbe50","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/scripts/friends.js","hash":"2d9395526e74bfcdb46eaf3aac2dc0be748ff0b8","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/scripts/search.js","hash":"e477a7e9a0ae009056120d4fd2040a296c28adad","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/scripts/tag-widgets.js","hash":"ed293a03ca9b5df8373b0b268ebb214ff79c634a","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_comments/disqus.ejs","hash":"e107a146259123fe3c1bdde4d6a33836efdcd36c","modified":1620451968000},{"_id":"themes/Kratos-Rebirth/layout/_comments/disqusjs.ejs","hash":"be784505c370fa683189a5220c51119e0afb57d5","modified":1620451968000},{"_id":"themes/Kratos-Rebirth/layout/_comments/twikoo.ejs","hash":"cf4659ba38d851c114c91e63f4e465538fe7b75a","modified":1620451968000},{"_id":"themes/Kratos-Rebirth/layout/_comments/valine.ejs","hash":"30942c85e9e8471e2885237b0589cf3ecf8cc0dc","modified":1620451968000},{"_id":"themes/Kratos-Rebirth/layout/_comments/waline.ejs","hash":"ed05efb5c1a13b23e3fc50a4061434e82b82bdaf","modified":1620451968000},{"_id":"themes/Kratos-Rebirth/layout/_pages/404.ejs","hash":"0769195fc28d4153607bfd1ff78efdcd8f907710","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_pages/search-page.ejs","hash":"7a3fd8ceddd14dadf4e419b453bf799273430b75","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_partial/after-footer.ejs","hash":"d7e2ebcd3763d233f8335caef6dc5e55d54ea952","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_partial/footer.ejs","hash":"f1c8cc5fde3a25b18a11c405f939abcf1eb8ad1c","modified":1620462076000},{"_id":"themes/Kratos-Rebirth/layout/_partial/head.ejs","hash":"d3e4306db429a8a884544e76a15ce6d6e74cb03c","modified":1620459998000},{"_id":"themes/Kratos-Rebirth/layout/_partial/header.ejs","hash":"f54adfdbd4341cd25d4b0941a97c225eed6f69e5","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_partial/sidebar.ejs","hash":"33395d7d7dcfdbf7d451b320ed778ddc9409cbc3","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_plugins/mermaid.ejs","hash":"3f7ed41957dda08d4e185b177685f3201bb7af60","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_tools/player.ejs","hash":"5c3ad00ab73158d9c2a5f94a637369ffba676131","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_tools/share.ejs","hash":"0384875f82a28bc4ab3fa3383f9471da16e37c27","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_widget/about.ejs","hash":"f355b8e8e1e9f2c912c77796ff616940cc34acba","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_widget/posts.ejs","hash":"a95e8afadec17d644d590769ccf6a82911a544f9","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_widget/category.ejs","hash":"7141cc95eeb460f016d5cb16ce1121423a680f64","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_widget/tagcloud.ejs","hash":"463a1e41aeaaff8b30fc4cff961181a73e007b60","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/css/kr-dark.min.css","hash":"43d3cd61925d1d03d66dba96378625124119054d","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/layout/_widget/toc.ejs","hash":"3f605d61df121f80b101eaf6ff6031d3dad5320e","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/css/kratosr.min.css","hash":"57250c1136e62923d642af8a2e395423a85a59ff","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/css/prismjs.min.css","hash":"b1524893db1e2f62f987745a0ec9c223e581146b","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/404.webp","hash":"d2e2bd5cc2627a2b04d5e449a67949a2605ae13e","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/about.webp","hash":"ca0fb739ab4426e7895742c1d8d52df1e14468e8","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/alipay.webp","hash":"01fa6151d2122f0470ee6f38ac8e4ced6c81912e","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/avatar.webp","hash":"3ed6e4e1e08e9c2700aa149d1f9e068fb02947cd","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/banner.webp","hash":"7c5093243bfd581a633ba8a905e2d379cfa78c00","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/banner_dark.webp","hash":"5589986444825e2b75c369d419ff736d3a396bac","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/bg.webp","hash":"f232b442b64eaa90f45a48ff04d8e7d352caf212","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/logo.webp","hash":"0821aba064fe3b64938e9b8686e6cff5648913e7","modified":1620457696000},{"_id":"themes/Kratos-Rebirth/source/images/sticky.webp","hash":"0e9bcc89faa0a5e6112ba29e0dcf68e33681db02","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/wechat.webp","hash":"06f3997bf554768c04cb588198c7b3d68c21b8e9","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/psr.webp","hash":"bf457bf84bca767bac1bd2b960d91c53ba3fbdee","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/js/kr-dark.min.js","hash":"469da5c1768c50d2324e458f196e2fa2ce036d8f","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/js/candy.min.js","hash":"f047499c25170f1f5fac2471141d439b6330198f","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/js/local-search.min.js","hash":"4978657d8ab1b7f26c09300c538680c90019c94f","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/js/kratosr.min.js","hash":"493ab9b1a677bd14838f419ece32a1d88acf2729","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/js/pjax.min.js","hash":"b02b0bbbb77c29a6bc568076300b3f85e15c796e","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/js/snow.min.js","hash":"74b8138840be139836cf9a0e6b8d3d41d0c2902b","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/js/candy.js","hash":"92f106471f1b446226da12e2f407cd9c71beb6d8","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/js/kr-dark.js","hash":"2f5c290e7cce5dd8e4aa0c8492fc9111064bd7c3","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/js/kratosr.js","hash":"a7e77063e17551aec088110a627a792cd3a08a85","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/js/local-search.js","hash":"8e5f05a61c195f5e5ffcf0834ac83dc154eb34c7","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/js/snow.js","hash":"f38cf6daf376da460d8bf58506dce37789500d68","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/js/pjax.js","hash":"466805aedd764376d4bd94edfc05d38d9213f956","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/scss/kr-dark.scss","hash":"effbc12fb602103c5fc570779a2c46192dd2e142","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/scss/kratosr.scss","hash":"f6227b924274c6f5d667f24e27ec26bef464e122","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/scss/prismjs.scss","hash":"2575922312729ec354d5889e28f4860917a9cac6","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/css/highlight/night-blue.min.css","hash":"60369b364dfa6cef9196cbf8b24a3efcac9af4b0","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/css/highlight/night-bright.min.css","hash":"eda28126ba9b201d21bcc0eafbdc08eb25c0cb35","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/css/highlight/light.min.css","hash":"d3b598187c94eb55c64f125cf74e223182d24b01","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/css/highlight/night-eighties.min.css","hash":"150e68c0d67a82ae0272e808ac0306ccf98cdaf1","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/css/highlight/night.min.css","hash":"ba88183b481c9f45ac162ebf1acd1256a040d75e","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_10.webp","hash":"4983eeca7886bbe7c09b0c79f4774302fdfa1315","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_11.webp","hash":"08d8d91e2b01768842abb47cd48a0f07d22d070c","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_1.webp","hash":"a818f050112ceb75e3a60dc1673a10783b254595","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_12.webp","hash":"b6b8e1281f9146925e45e937cb4d5b28bcabe957","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_13.webp","hash":"c4c9050637f4ffa3cb7d782f59dadc993ac3a6de","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_14.webp","hash":"f9300e2b45c1f061ec8cc21527142dafc558a9e6","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_15.webp","hash":"8629f2a7d3b0192549f809e6b7479159af0222da","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_16.webp","hash":"61714ccffd55d6fa74cf94bcdd5a464da04ce891","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_17.webp","hash":"b5a036ec234a23c820a89d1c640b1f2e8dd3dfa4","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_18.webp","hash":"5bc78b9d6cb0a0cf6daa3a35b93e575777a49ddd","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_19.webp","hash":"15e0cd0cbe5c7166915a4b68680681beccc2afef","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_2.webp","hash":"1bcf7461c2b9408b8a893013fa425eb46701faf6","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_20.webp","hash":"4ab961d94a0d3abbefc7f6d9188a889ec2225e7a","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_3.webp","hash":"3faffd2575e0751526249c5c56a2a5045a21363b","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_4.webp","hash":"1d0f136590632e7ba31f5510d24891ba443f1f33","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_5.webp","hash":"ba384ada1c2a17b67036addd68ffa1f604ab5a41","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_6.webp","hash":"c2d8b68971dacd111566526f64d94932f5c6f076","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_7.webp","hash":"4be8fe8ea1b3563b78924062e3aa013cd5c4e82b","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_8.webp","hash":"9e6d74786d8459440d68c409eb654364dd279f8a","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/thumb/thumb_9.webp","hash":"bca69e7d56982b43c52e9ffa17c8d5bb268834d8","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/scss/highlight/style.scss","hash":"6b9174d41d9d397e7498309eb16af5bb86ebb2ed","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/scss/highlight/theme/light.scss","hash":"1fa05c806415127e3833315adb10443ca128b927","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/scss/highlight/theme/night-blue.scss","hash":"9d7b9690331b850e6b92da10e57254e2bd9d294d","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/scss/highlight/theme/night-bright.scss","hash":"8c1a12a963c0ff01d46f4e452b2c8ac7419465bd","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/scss/highlight/theme/night-eighties.scss","hash":"770bf47845991ce76ccb87e02ea63e1158b74b39","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/src/scss/highlight/theme/night.scss","hash":"3bad0f8ac6be471a6d290f8b72a8ece8ca52f13e","modified":1620451970000},{"_id":"themes/Kratos-Rebirth/source/images/my.webp","hash":"3adb718329d17fed00f3fcd67af4bcd20002cfd7","modified":1620461408000},{"_id":"public/config/main.json","hash":"65767c0374f3753e6c22ca74a99805eef7d7b163","modified":1620570967834},{"_id":"public/search.json","hash":"f26558215da1ef004ce3435d2dcea6d70175309b","modified":1620570967834},{"_id":"public/categories/博客教程/index.html","hash":"f7003f7eb63d1b35c55c0f9f63d5894f27e61ff0","modified":1620570967834},{"_id":"public/categories/Git/index.html","hash":"8ea4df5eddb7d5dfab69bada5aa22ce58c1dd77a","modified":1620570967834},{"_id":"public/tags/Hexo/index.html","hash":"1c02a69df1cc024e8c80db4b76baa5d56caa48c7","modified":1620570967834},{"_id":"public/tags/Git/index.html","hash":"ac3f06d2a02d591646cc4978a7da25baa8852e17","modified":1620570967834},{"_id":"public/404.html","hash":"07ed93f18ca434afa782653a8092a8af11ac0d67","modified":1620570967834},{"_id":"public/friends/index.html","hash":"6d445552bafdc2c02d536933cfcacab158f81703","modified":1620570967834},{"_id":"public/search/index.html","hash":"453da3b26dc2be18cc5716d1952efdbf257b2322","modified":1620570967834},{"_id":"public/2021/05/08/git常用命令/index.html","hash":"99fde85decb6e224b1227e1fdf0cd4bb9b19103b","modified":1620570967834},{"_id":"public/2021/05/08/Hexo创建博客/index.html","hash":"a0c6c22871a1ba558f6fb46b61b3a38169b44b0e","modified":1620570967834},{"_id":"public/archives/index.html","hash":"060b3af281435ab9cbbcdac46367ca148fe7fbc9","modified":1620570967834},{"_id":"public/archives/2021/index.html","hash":"d3c4c3730e9a8cbada8f4411df1b42794bee1c02","modified":1620570967834},{"_id":"public/archives/2021/05/index.html","hash":"56335c103409d5f011325ca3849c7a0419ab111c","modified":1620570967834},{"_id":"public/index.html","hash":"d8377c4b71dac9eddbd3d071d3e82c19ca6b51bb","modified":1620570967834},{"_id":"public/images/alipay.webp","hash":"01fa6151d2122f0470ee6f38ac8e4ced6c81912e","modified":1620570967834},{"_id":"public/images/about.webp","hash":"ca0fb739ab4426e7895742c1d8d52df1e14468e8","modified":1620570967834},{"_id":"public/images/avatar.webp","hash":"3ed6e4e1e08e9c2700aa149d1f9e068fb02947cd","modified":1620570967834},{"_id":"public/images/banner.webp","hash":"7c5093243bfd581a633ba8a905e2d379cfa78c00","modified":1620570967834},{"_id":"public/images/banner_dark.webp","hash":"5589986444825e2b75c369d419ff736d3a396bac","modified":1620570967834},{"_id":"public/images/failure.ico","hash":"5eec5c163400d8ece74286da49130da1ead3f6f6","modified":1620570967834},{"_id":"public/images/logo.webp","hash":"0821aba064fe3b64938e9b8686e6cff5648913e7","modified":1620570967834},{"_id":"public/images/sticky.webp","hash":"0e9bcc89faa0a5e6112ba29e0dcf68e33681db02","modified":1620570967834},{"_id":"public/images/wechat.webp","hash":"06f3997bf554768c04cb588198c7b3d68c21b8e9","modified":1620570967834},{"_id":"public/images/thumb/thumb_10.webp","hash":"4983eeca7886bbe7c09b0c79f4774302fdfa1315","modified":1620570967834},{"_id":"public/images/thumb/thumb_1.webp","hash":"a818f050112ceb75e3a60dc1673a10783b254595","modified":1620570967834},{"_id":"public/images/thumb/thumb_11.webp","hash":"08d8d91e2b01768842abb47cd48a0f07d22d070c","modified":1620570967834},{"_id":"public/images/thumb/thumb_12.webp","hash":"b6b8e1281f9146925e45e937cb4d5b28bcabe957","modified":1620570967834},{"_id":"public/images/thumb/thumb_13.webp","hash":"c4c9050637f4ffa3cb7d782f59dadc993ac3a6de","modified":1620570967834},{"_id":"public/images/thumb/thumb_14.webp","hash":"f9300e2b45c1f061ec8cc21527142dafc558a9e6","modified":1620570967834},{"_id":"public/images/thumb/thumb_16.webp","hash":"61714ccffd55d6fa74cf94bcdd5a464da04ce891","modified":1620570967834},{"_id":"public/images/thumb/thumb_17.webp","hash":"b5a036ec234a23c820a89d1c640b1f2e8dd3dfa4","modified":1620570967834},{"_id":"public/images/thumb/thumb_18.webp","hash":"5bc78b9d6cb0a0cf6daa3a35b93e575777a49ddd","modified":1620570967834},{"_id":"public/images/thumb/thumb_19.webp","hash":"15e0cd0cbe5c7166915a4b68680681beccc2afef","modified":1620570967834},{"_id":"public/images/thumb/thumb_2.webp","hash":"1bcf7461c2b9408b8a893013fa425eb46701faf6","modified":1620570967834},{"_id":"public/images/thumb/thumb_3.webp","hash":"3faffd2575e0751526249c5c56a2a5045a21363b","modified":1620570967834},{"_id":"public/images/thumb/thumb_20.webp","hash":"4ab961d94a0d3abbefc7f6d9188a889ec2225e7a","modified":1620570967834},{"_id":"public/images/thumb/thumb_4.webp","hash":"1d0f136590632e7ba31f5510d24891ba443f1f33","modified":1620570967834},{"_id":"public/images/thumb/thumb_5.webp","hash":"ba384ada1c2a17b67036addd68ffa1f604ab5a41","modified":1620570967834},{"_id":"public/images/thumb/thumb_7.webp","hash":"4be8fe8ea1b3563b78924062e3aa013cd5c4e82b","modified":1620570967834},{"_id":"public/images/thumb/thumb_6.webp","hash":"c2d8b68971dacd111566526f64d94932f5c6f076","modified":1620570967834},{"_id":"public/images/thumb/thumb_8.webp","hash":"9e6d74786d8459440d68c409eb654364dd279f8a","modified":1620570967834},{"_id":"public/images/404.webp","hash":"d2e2bd5cc2627a2b04d5e449a67949a2605ae13e","modified":1620570967834},{"_id":"public/images/bg.webp","hash":"f232b442b64eaa90f45a48ff04d8e7d352caf212","modified":1620570967834},{"_id":"public/images/psr.webp","hash":"bf457bf84bca767bac1bd2b960d91c53ba3fbdee","modified":1620570967834},{"_id":"public/images/thumb/thumb_15.webp","hash":"8629f2a7d3b0192549f809e6b7479159af0222da","modified":1620570967834},{"_id":"public/images/thumb/thumb_9.webp","hash":"bca69e7d56982b43c52e9ffa17c8d5bb268834d8","modified":1620570967834},{"_id":"public/css/prismjs.min.css","hash":"b1524893db1e2f62f987745a0ec9c223e581146b","modified":1620570967834},{"_id":"public/js/kratosr.min.js","hash":"493ab9b1a677bd14838f419ece32a1d88acf2729","modified":1620570967834},{"_id":"public/js/candy.min.js","hash":"f047499c25170f1f5fac2471141d439b6330198f","modified":1620570967834},{"_id":"public/js/pjax.min.js","hash":"b02b0bbbb77c29a6bc568076300b3f85e15c796e","modified":1620570967834},{"_id":"public/js/local-search.min.js","hash":"4978657d8ab1b7f26c09300c538680c90019c94f","modified":1620570967834},{"_id":"public/js/snow.min.js","hash":"74b8138840be139836cf9a0e6b8d3d41d0c2902b","modified":1620570967834},{"_id":"public/css/highlight/night-bright.min.css","hash":"eda28126ba9b201d21bcc0eafbdc08eb25c0cb35","modified":1620570967834},{"_id":"public/css/highlight/light.min.css","hash":"d3b598187c94eb55c64f125cf74e223182d24b01","modified":1620570967834},{"_id":"public/css/highlight/night-blue.min.css","hash":"60369b364dfa6cef9196cbf8b24a3efcac9af4b0","modified":1620570967834},{"_id":"public/css/highlight/night-eighties.min.css","hash":"150e68c0d67a82ae0272e808ac0306ccf98cdaf1","modified":1620570967834},{"_id":"public/css/highlight/night.min.css","hash":"ba88183b481c9f45ac162ebf1acd1256a040d75e","modified":1620570967834},{"_id":"public/js/kr-dark.min.js","hash":"469da5c1768c50d2324e458f196e2fa2ce036d8f","modified":1620570967834},{"_id":"public/css/kr-dark.min.css","hash":"5409001f9e4a08ac46dace09d200c747801bc6d3","modified":1620570967834},{"_id":"public/css/kratosr.min.css","hash":"57250c1136e62923d642af8a2e395423a85a59ff","modified":1620570967834},{"_id":"public/images/my.webp","hash":"3adb718329d17fed00f3fcd67af4bcd20002cfd7","modified":1620570967834},{"_id":"source/_posts/爬虫基础原理.md","hash":"1e895cc3ea821dbe39384380ce9b19f4cd2457d4","modified":1620603534000}],"Category":[{"name":"博客教程","_id":"ckoha427k0002y0xuah4106mn"},{"name":"Git","_id":"ckoha427p0004y0xu08bwf1ay"},{"name":"爬虫","_id":"ckohtiq6q0001twxu2d9j2oc9"}],"Data":[],"Page":[],"Post":[{"title":"Hexo搭建个人博客","date":"2021-05-08T07:39:22.000Z","pic":null,"comments":1,"toc":true,"only":["home","category","tag"],"_content":"\n\n# Hexo\n\n[Hexo](https://hexo.io/zh-cn/)是一个快速、简洁且高效的博客框架。\n\n## 安装\n\n### git安装\n\n```shell\n    Windows：下载并安装 git.\n    Mac：使用 Homebrew, MacPorts 或者下载 安装程序。\n    Linux (Ubuntu, Debian)：sudo apt-get install git-core\n    Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core\n```\n\n### 安装 Node.js\n\nNode.js 为大多数平台提供了官方的 安装程序。对于中国大陆地区用户，可以前往 淘宝 Node.js 镜像 下载。\n\n其它的安装方法：\n\n```shell\n    Windows：通过 nvs（推荐）或者nvm 安装。\n    Mac：使用 Homebrew 或 MacPorts 安装。\n    Linux（DEB/RPM-based）：从 NodeSource 安装。\n    其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 指导\n```\n\n### 安装 Hexo\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```shell\n    npm install -g hexo-cli\n```\n\n安装完成后，`win`+`R`输入`cmd`调出命令行，输入`hexo`提示如下，说明安装正确。\n\n```shell\n    C:\\Users\\espho>hexo\n    Usage: hexo <command>\n\n    Commands:\n    help     Get help on a command.\n    init     Create a new Hexo folder.\n    version  Display version information.\n\n    Global Options:\n    --config  Specify config file instead of using _config.yml\n    --cwd     Specify the CWD\n    --debug   Display all verbose messages in the terminal\n    --draft   Display draft posts\n    --safe    Disable all plugins and scripts\n    --silent  Hide output on console\n\n    For more help, you can use 'hexo help [command]' for the detailed information\n    or you can check the docs: http://hexo.io/docs/\n```\n\n## 建站\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n```shell\n    hexo init <folder>\n    cd <folder>\n    npm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n```shell\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\n网站的 配置 信息，您可以在此配置大部分的参数。\n\n### package.json\n\n应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。\n\n```shell\npackage.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.8.0\",\n    \"hexo-generator-archive\": \"^0.1.5\",\n    \"hexo-generator-category\": \"^0.1.3\",\n    \"hexo-generator-index\": \"^0.2.1\",\n    \"hexo-generator-tag\": \"^0.2.0\",\n    \"hexo-renderer-ejs\": \"^0.3.1\",\n    \"hexo-renderer-stylus\": \"^0.3.3\",\n    \"hexo-renderer-marked\": \"^0.3.2\",\n    \"hexo-server\": \"^0.3.3\"\n  }\n}\n```\n\n### scaffolds\n\n`模版`文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n\nHexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。\n\n### source\n\n资源文件夹是存放用户资源的地方。除 `_posts`文件夹之外，开头命名为 `_ (下划线)`的文件`/文件夹`和`隐藏的文件`将会被忽略。Markdown 和 HTML 文件会被解析并放到 `public`文件夹，而其他文件会被拷贝过去。\n\n### themes\n\n`主题`文件夹。Hexo 会根据主题来生成静态页面。\n\n## 配置\n\n相关配置可直接访问[官方文档](https://hexo.io/zh-cn/docs/configuration)查看，我们先从使用别人的主题开始，[官方](https://hexo.io/themes/)提供了335个主题下载使用，你也可以根据规范制定自己的主题。\n\n## 主题\n\n创建`Hexo`主题非常容易，您只要在`themes`文件夹内，新增一个任意名称的文件夹，并修改`_config.yml`内的`theme`设定，即可切换主题。一个主题可能会有以下的结构：\n\n```shell\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\n主题的配置文件。和 Hexo 配置文件不同，主题配置文件修改时会自动更新，无需重启`Hexo Server`。\n\n## 获取主题\n\n选择相应的主题，从`github`上获取到`themes`目录下。\n\n修改主目录下`_config.yml`中的配置文件，将`theme`修改为获取主题的`文件夹名`。\n\n```shell\ntheme: Kratos-Rebirth\n```\n\n## 运行\n\n在主目录下调用`cmd`命令`hexo server`运行服务，访问`http://localhost:4000`进入博客。\n\n```shell\nespho@Holy-Surface MINGW64 /e/blog\n$ hexo server\nINFO  Validating config\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.\nINFO  感谢使用 Kratos-Rebirth 主题，您的版本是 v1.6.2\nINFO  如有任何疑问，您可以查阅文档，或是去 https://github.com/Candinya/Kratos-Rebirth/issues 提出对应的 issue 。\nINFO  预祝您使用愉快。\n```\n\n## 添加文章\n\n","source":"_posts/Hexo创建博客.md","raw":"---\ntitle: Hexo搭建个人博客\ndate: 2021-05-08 15:39:22\ncategories: 博客教程\ntags:\n- Hexo\n# sticky: 100\npic:\ncomments: true\ntoc: true\nonly:\n- home\n- category\n- tag\n---\n\n\n# Hexo\n\n[Hexo](https://hexo.io/zh-cn/)是一个快速、简洁且高效的博客框架。\n\n## 安装\n\n### git安装\n\n```shell\n    Windows：下载并安装 git.\n    Mac：使用 Homebrew, MacPorts 或者下载 安装程序。\n    Linux (Ubuntu, Debian)：sudo apt-get install git-core\n    Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core\n```\n\n### 安装 Node.js\n\nNode.js 为大多数平台提供了官方的 安装程序。对于中国大陆地区用户，可以前往 淘宝 Node.js 镜像 下载。\n\n其它的安装方法：\n\n```shell\n    Windows：通过 nvs（推荐）或者nvm 安装。\n    Mac：使用 Homebrew 或 MacPorts 安装。\n    Linux（DEB/RPM-based）：从 NodeSource 安装。\n    其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 指导\n```\n\n### 安装 Hexo\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```shell\n    npm install -g hexo-cli\n```\n\n安装完成后，`win`+`R`输入`cmd`调出命令行，输入`hexo`提示如下，说明安装正确。\n\n```shell\n    C:\\Users\\espho>hexo\n    Usage: hexo <command>\n\n    Commands:\n    help     Get help on a command.\n    init     Create a new Hexo folder.\n    version  Display version information.\n\n    Global Options:\n    --config  Specify config file instead of using _config.yml\n    --cwd     Specify the CWD\n    --debug   Display all verbose messages in the terminal\n    --draft   Display draft posts\n    --safe    Disable all plugins and scripts\n    --silent  Hide output on console\n\n    For more help, you can use 'hexo help [command]' for the detailed information\n    or you can check the docs: http://hexo.io/docs/\n```\n\n## 建站\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n```shell\n    hexo init <folder>\n    cd <folder>\n    npm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n```shell\n.\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### _config.yml\n\n网站的 配置 信息，您可以在此配置大部分的参数。\n\n### package.json\n\n应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。\n\n```shell\npackage.json\n{\n  \"name\": \"hexo-site\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"hexo\": {\n    \"version\": \"\"\n  },\n  \"dependencies\": {\n    \"hexo\": \"^3.8.0\",\n    \"hexo-generator-archive\": \"^0.1.5\",\n    \"hexo-generator-category\": \"^0.1.3\",\n    \"hexo-generator-index\": \"^0.2.1\",\n    \"hexo-generator-tag\": \"^0.2.0\",\n    \"hexo-renderer-ejs\": \"^0.3.1\",\n    \"hexo-renderer-stylus\": \"^0.3.3\",\n    \"hexo-renderer-marked\": \"^0.3.2\",\n    \"hexo-server\": \"^0.3.3\"\n  }\n}\n```\n\n### scaffolds\n\n`模版`文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。\n\nHexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。\n\n### source\n\n资源文件夹是存放用户资源的地方。除 `_posts`文件夹之外，开头命名为 `_ (下划线)`的文件`/文件夹`和`隐藏的文件`将会被忽略。Markdown 和 HTML 文件会被解析并放到 `public`文件夹，而其他文件会被拷贝过去。\n\n### themes\n\n`主题`文件夹。Hexo 会根据主题来生成静态页面。\n\n## 配置\n\n相关配置可直接访问[官方文档](https://hexo.io/zh-cn/docs/configuration)查看，我们先从使用别人的主题开始，[官方](https://hexo.io/themes/)提供了335个主题下载使用，你也可以根据规范制定自己的主题。\n\n## 主题\n\n创建`Hexo`主题非常容易，您只要在`themes`文件夹内，新增一个任意名称的文件夹，并修改`_config.yml`内的`theme`设定，即可切换主题。一个主题可能会有以下的结构：\n\n```shell\n.\n├── _config.yml\n├── languages\n├── layout\n├── scripts\n└── source\n```\n\n### _config.yml\n\n主题的配置文件。和 Hexo 配置文件不同，主题配置文件修改时会自动更新，无需重启`Hexo Server`。\n\n## 获取主题\n\n选择相应的主题，从`github`上获取到`themes`目录下。\n\n修改主目录下`_config.yml`中的配置文件，将`theme`修改为获取主题的`文件夹名`。\n\n```shell\ntheme: Kratos-Rebirth\n```\n\n## 运行\n\n在主目录下调用`cmd`命令`hexo server`运行服务，访问`http://localhost:4000`进入博客。\n\n```shell\nespho@Holy-Surface MINGW64 /e/blog\n$ hexo server\nINFO  Validating config\nINFO  Start processing\nINFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.\nINFO  感谢使用 Kratos-Rebirth 主题，您的版本是 v1.6.2\nINFO  如有任何疑问，您可以查阅文档，或是去 https://github.com/Candinya/Kratos-Rebirth/issues 提出对应的 issue 。\nINFO  预祝您使用愉快。\n```\n\n## 添加文章\n\n","slug":"Hexo创建博客","published":1,"updated":"2021-05-08T08:59:02.000Z","layout":"post","photos":[],"link":"","_id":"ckoha42790000y0xu303kele2","content":"<h1 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h1><p><a href=\"https://hexo.io/zh-cn/\">Hexo</a>是一个快速、简洁且高效的博客框架。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"git安装\"><a href=\"#git安装\" class=\"headerlink\" title=\"git安装\"></a>git安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows：下载并安装 git.</span><br><span class=\"line\">Mac：使用 Homebrew, MacPorts 或者下载 安装程序。</span><br><span class=\"line\">Linux (Ubuntu, Debian)：sudo apt-get install git-core</span><br><span class=\"line\">Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h3><p>Node.js 为大多数平台提供了官方的 安装程序。对于中国大陆地区用户，可以前往 淘宝 Node.js 镜像 下载。</p>\n<p>其它的安装方法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows：通过 nvs（推荐）或者nvm 安装。</span><br><span class=\"line\">Mac：使用 Homebrew 或 MacPorts 安装。</span><br><span class=\"line\">Linux（DEB/RPM-based）：从 NodeSource 安装。</span><br><span class=\"line\">其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 指导</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后，<code>win</code>+<code>R</code>输入<code>cmd</code>调出命令行，输入<code>hexo</code>提示如下，说明安装正确。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\espho&gt;hexo</span><br><span class=\"line\">Usage: hexo &lt;command&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">help     Get help on a command.</span><br><span class=\"line\">init     Create a new Hexo folder.</span><br><span class=\"line\">version  Display version information.</span><br><span class=\"line\"></span><br><span class=\"line\">Global Options:</span><br><span class=\"line\">--config  Specify config file instead of using _config.yml</span><br><span class=\"line\">--cwd     Specify the CWD</span><br><span class=\"line\">--debug   Display all verbose messages in the terminal</span><br><span class=\"line\">--draft   Display draft posts</span><br><span class=\"line\">--safe    Disable all plugins and scripts</span><br><span class=\"line\">--silent  Hide output on console</span><br><span class=\"line\"></span><br><span class=\"line\">For more help, you can use &#x27;hexo help [command]&#x27; for the detailed information</span><br><span class=\"line\">or you can check the docs: http://hexo.io/docs/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\">cd &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>网站的 配置 信息，您可以在此配置大部分的参数。</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;hexo-site&quot;,</span><br><span class=\"line\">  &quot;version&quot;: &quot;0.0.0&quot;,</span><br><span class=\"line\">  &quot;private&quot;: true,</span><br><span class=\"line\">  &quot;hexo&quot;: &#123;</span><br><span class=\"line\">    &quot;version&quot;: &quot;&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;dependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;hexo&quot;: &quot;^3.8.0&quot;,</span><br><span class=\"line\">    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,</span><br><span class=\"line\">    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,</span><br><span class=\"line\">    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,</span><br><span class=\"line\">    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,</span><br><span class=\"line\">    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,</span><br><span class=\"line\">    &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;,</span><br><span class=\"line\">    &quot;hexo-server&quot;: &quot;^0.3.3&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><code>模版</code>文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>\n<p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code>文件夹之外，开头命名为 <code>_ (下划线)</code>的文件<code>/文件夹</code>和<code>隐藏的文件</code>将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code>文件夹，而其他文件会被拷贝过去。</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><code>主题</code>文件夹。Hexo 会根据主题来生成静态页面。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>相关配置可直接访问<a href=\"https://hexo.io/zh-cn/docs/configuration\">官方文档</a>查看，我们先从使用别人的主题开始，<a href=\"https://hexo.io/themes/\">官方</a>提供了335个主题下载使用，你也可以根据规范制定自己的主题。</p>\n<h2 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h2><p>创建<code>Hexo</code>主题非常容易，您只要在<code>themes</code>文件夹内，新增一个任意名称的文件夹，并修改<code>_config.yml</code>内的<code>theme</code>设定，即可切换主题。一个主题可能会有以下的结构：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"config-yml-1\"><a href=\"#config-yml-1\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>主题的配置文件。和 Hexo 配置文件不同，主题配置文件修改时会自动更新，无需重启<code>Hexo Server</code>。</p>\n<h2 id=\"获取主题\"><a href=\"#获取主题\" class=\"headerlink\" title=\"获取主题\"></a>获取主题</h2><p>选择相应的主题，从<code>github</code>上获取到<code>themes</code>目录下。</p>\n<p>修改主目录下<code>_config.yml</code>中的配置文件，将<code>theme</code>修改为获取主题的<code>文件夹名</code>。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: Kratos-Rebirth</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>在主目录下调用<code>cmd</code>命令<code>hexo server</code>运行服务，访问<code>http://localhost:4000</code>进入博客。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">espho@Holy-Surface MINGW64 /e/blog</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> hexo server</span></span><br><span class=\"line\">INFO  Validating config</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br><span class=\"line\">INFO  感谢使用 Kratos-Rebirth 主题，您的版本是 v1.6.2</span><br><span class=\"line\">INFO  如有任何疑问，您可以查阅文档，或是去 https://github.com/Candinya/Kratos-Rebirth/issues 提出对应的 issue 。</span><br><span class=\"line\">INFO  预祝您使用愉快。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加文章\"><a href=\"#添加文章\" class=\"headerlink\" title=\"添加文章\"></a>添加文章</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h1><p><a href=\"https://hexo.io/zh-cn/\">Hexo</a>是一个快速、简洁且高效的博客框架。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"git安装\"><a href=\"#git安装\" class=\"headerlink\" title=\"git安装\"></a>git安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows：下载并安装 git.</span><br><span class=\"line\">Mac：使用 Homebrew, MacPorts 或者下载 安装程序。</span><br><span class=\"line\">Linux (Ubuntu, Debian)：sudo apt-get install git-core</span><br><span class=\"line\">Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装-Node-js\"><a href=\"#安装-Node-js\" class=\"headerlink\" title=\"安装 Node.js\"></a>安装 Node.js</h3><p>Node.js 为大多数平台提供了官方的 安装程序。对于中国大陆地区用户，可以前往 淘宝 Node.js 镜像 下载。</p>\n<p>其它的安装方法：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Windows：通过 nvs（推荐）或者nvm 安装。</span><br><span class=\"line\">Mac：使用 Homebrew 或 MacPorts 安装。</span><br><span class=\"line\">Linux（DEB/RPM-based）：从 NodeSource 安装。</span><br><span class=\"line\">其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 指导</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"安装-Hexo\"><a href=\"#安装-Hexo\" class=\"headerlink\" title=\"安装 Hexo\"></a>安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后，<code>win</code>+<code>R</code>输入<code>cmd</code>调出命令行，输入<code>hexo</code>提示如下，说明安装正确。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\espho&gt;hexo</span><br><span class=\"line\">Usage: hexo &lt;command&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Commands:</span><br><span class=\"line\">help     Get help on a command.</span><br><span class=\"line\">init     Create a new Hexo folder.</span><br><span class=\"line\">version  Display version information.</span><br><span class=\"line\"></span><br><span class=\"line\">Global Options:</span><br><span class=\"line\">--config  Specify config file instead of using _config.yml</span><br><span class=\"line\">--cwd     Specify the CWD</span><br><span class=\"line\">--debug   Display all verbose messages in the terminal</span><br><span class=\"line\">--draft   Display draft posts</span><br><span class=\"line\">--safe    Disable all plugins and scripts</span><br><span class=\"line\">--silent  Hide output on console</span><br><span class=\"line\"></span><br><span class=\"line\">For more help, you can use &#x27;hexo help [command]&#x27; for the detailed information</span><br><span class=\"line\">or you can check the docs: http://hexo.io/docs/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"建站\"><a href=\"#建站\" class=\"headerlink\" title=\"建站\"></a>建站</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br><span class=\"line\">cd &lt;folder&gt;</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<p>新建完成后，指定文件夹的目录如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── package.json</span><br><span class=\"line\">├── scaffolds</span><br><span class=\"line\">├── source</span><br><span class=\"line\">|   ├── _drafts</span><br><span class=\"line\">|   └── _posts</span><br><span class=\"line\">└── themes</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"config-yml\"><a href=\"#config-yml\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>网站的 配置 信息，您可以在此配置大部分的参数。</p>\n<h3 id=\"package-json\"><a href=\"#package-json\" class=\"headerlink\" title=\"package.json\"></a>package.json</h3><p>应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot;: &quot;hexo-site&quot;,</span><br><span class=\"line\">  &quot;version&quot;: &quot;0.0.0&quot;,</span><br><span class=\"line\">  &quot;private&quot;: true,</span><br><span class=\"line\">  &quot;hexo&quot;: &#123;</span><br><span class=\"line\">    &quot;version&quot;: &quot;&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;dependencies&quot;: &#123;</span><br><span class=\"line\">    &quot;hexo&quot;: &quot;^3.8.0&quot;,</span><br><span class=\"line\">    &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;,</span><br><span class=\"line\">    &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;,</span><br><span class=\"line\">    &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;,</span><br><span class=\"line\">    &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;,</span><br><span class=\"line\">    &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;,</span><br><span class=\"line\">    &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;,</span><br><span class=\"line\">    &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;,</span><br><span class=\"line\">    &quot;hexo-server&quot;: &quot;^0.3.3&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"scaffolds\"><a href=\"#scaffolds\" class=\"headerlink\" title=\"scaffolds\"></a>scaffolds</h3><p><code>模版</code>文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>\n<p>Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。</p>\n<h3 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h3><p>资源文件夹是存放用户资源的地方。除 <code>_posts</code>文件夹之外，开头命名为 <code>_ (下划线)</code>的文件<code>/文件夹</code>和<code>隐藏的文件</code>将会被忽略。Markdown 和 HTML 文件会被解析并放到 <code>public</code>文件夹，而其他文件会被拷贝过去。</p>\n<h3 id=\"themes\"><a href=\"#themes\" class=\"headerlink\" title=\"themes\"></a>themes</h3><p><code>主题</code>文件夹。Hexo 会根据主题来生成静态页面。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>相关配置可直接访问<a href=\"https://hexo.io/zh-cn/docs/configuration\">官方文档</a>查看，我们先从使用别人的主题开始，<a href=\"https://hexo.io/themes/\">官方</a>提供了335个主题下载使用，你也可以根据规范制定自己的主题。</p>\n<h2 id=\"主题\"><a href=\"#主题\" class=\"headerlink\" title=\"主题\"></a>主题</h2><p>创建<code>Hexo</code>主题非常容易，您只要在<code>themes</code>文件夹内，新增一个任意名称的文件夹，并修改<code>_config.yml</code>内的<code>theme</code>设定，即可切换主题。一个主题可能会有以下的结构：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── _config.yml</span><br><span class=\"line\">├── languages</span><br><span class=\"line\">├── layout</span><br><span class=\"line\">├── scripts</span><br><span class=\"line\">└── source</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"config-yml-1\"><a href=\"#config-yml-1\" class=\"headerlink\" title=\"_config.yml\"></a>_config.yml</h3><p>主题的配置文件。和 Hexo 配置文件不同，主题配置文件修改时会自动更新，无需重启<code>Hexo Server</code>。</p>\n<h2 id=\"获取主题\"><a href=\"#获取主题\" class=\"headerlink\" title=\"获取主题\"></a>获取主题</h2><p>选择相应的主题，从<code>github</code>上获取到<code>themes</code>目录下。</p>\n<p>修改主目录下<code>_config.yml</code>中的配置文件，将<code>theme</code>修改为获取主题的<code>文件夹名</code>。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">theme: Kratos-Rebirth</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><p>在主目录下调用<code>cmd</code>命令<code>hexo server</code>运行服务，访问<code>http://localhost:4000</code>进入博客。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">espho@Holy-Surface MINGW64 /e/blog</span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> hexo server</span></span><br><span class=\"line\">INFO  Validating config</span><br><span class=\"line\">INFO  Start processing</span><br><span class=\"line\">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br><span class=\"line\">INFO  感谢使用 Kratos-Rebirth 主题，您的版本是 v1.6.2</span><br><span class=\"line\">INFO  如有任何疑问，您可以查阅文档，或是去 https://github.com/Candinya/Kratos-Rebirth/issues 提出对应的 issue 。</span><br><span class=\"line\">INFO  预祝您使用愉快。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加文章\"><a href=\"#添加文章\" class=\"headerlink\" title=\"添加文章\"></a>添加文章</h2>"},{"title":"Git常用命令","date":"2021-05-08T10:03:19.000Z","pic":null,"comments":1,"toc":true,"only":["home","category","tag"],"_content":"\n# Git常用命令\n\n## 仓库\n\n在当前目录新建一个Git代码库\n\n```shell\ngit init\n```\n\n新建一个目录，将其初始化为Git代码库\n\n```shell\ngit init [project-name]\n```\n\n下载一个项目和它的整个代码历史\n\n```shell\ngit clone [url]\n```\n\n## 配置\n\n显示当前的Git配置\n\n```shell\ngit config --list\n```\n\n编辑Git配置文件\n\n```shell\ngit config -e [--global]\n```\n\n设置提交代码时的用户信息\n\n```shell\ngit config [--global] user.name \"[name]\"\ngit config [--global] user.email \"[email address]\"\n```\n\n## 增加/删除文件\n\n添加指定文件到暂存区\n\n```shell\ngit add [file1] [file2] ...\n```\n\n添加指定目录到暂存区，包括子目录\n\n```shell\ngit add [dir]\n```\n\n添加当前目录的所有文件到暂存区\n\n```shell\ngit add .\n```\n\n## 添加每个变化前，都会要求确认\n\n对于同一个文件的多处变化，可以实现分次提交\n\n```shell\ngit add -p\n````\n\n删除工作区文件，并且将这次删除放入暂存区\n\n```shell\ngit rm [file1] [file2] ...\n```\n\n停止追踪指定文件，但该文件会保留在工作区\n\n```shell\ngit rm --cached [file]\n```\n\n改名文件，并且将这个改名放入暂存区\n\n```shell\ngit mv [file-original] [file-renamed]\n```\n\n## 代码提交\n\n提交暂存区到仓库区\n\n```shell\ngit commit -m [message]\n```\n\n提交暂存区的指定文件到仓库区\n\n```shell\ngit commit [file1] [file2] ... -m [message]\n```\n\n提交工作区自上次commit之后的变化，直接到仓库区\n\n```shell\ngit commit -a\n```\n\n提交时显示所有diff信息\n\n```shell\ngit commit -v\n```\n\n使用一次新的commit，替代上一次提交,如果代码没有任何新变化，则用来改写上一次commit的提交信息\n\n```shell\ngit commit --amend -m [message]\n```\n\n重做上一次commit，并包括指定文件的新变化\n\n```shell\ngit commit --amend [file1] [file2] ...\n```\n\n## 分支\n\n列出所有本地分支\n\n```shell\ngit branch\n```\n\n列出所有远程分支\n\n```shell\ngit branch -r\n```\n\n列出所有本地分支和远程分支\n\n```shell\ngit branch -a\n```\n\n新建一个分支，但依然停留在当前分支\n\n```shell\ngit branch [branch-name]\n```\n\n新建一个分支，并切换到该分支\n\n```shell\ngit checkout -b [branch]\n```\n\n新建一个分支，指向指定commit\n\n```shell\ngit branch [branch] [commit]\n```\n\n新建一个分支，与指定的远程分支建立追踪关系\n\n```shell\ngit branch --track [branch] [remote-branch]\n```\n\n切换到指定分支，并更新工作区\n\n```shell\ngit checkout [branch-name]\n```\n\n切换到上一个分支\n\n```shell\ngit checkout -\n```\n\n建立追踪关系，在现有分支与指定的远程分支之间\n\n```shell\ngit branch --set-upstream [branch] [remote-branch]\n```\n\n合并指定分支到当前分支\n\n```shell\ngit merge [branch]\n```\n\n选择一个commit，合并进当前分支\n\n```shell\ngit cherry-pick [commit]\n```\n\n删除分支\n\n```shell\ngit branch -d [branch-name]\n```\n\n删除远程分支\n\n```shell\ngit push origin --delete [branch-name]\ngit branch -dr [remote/branch]\n```\n\n## 标签\n\n列出所有tag\n\n```shell\ngit tag\n```\n\n新建一个tag在当前commit\n\n```shell\ngit tag [tag]\n```\n\n新建一个tag在指定commit\n\n```shell\ngit tag [tag] [commit]\n```\n\n删除本地tag\n\n```shell\ngit tag -d [tag]\n```\n\n删除远程tag\n\n```shell\ngit push origin :refs/tags/[tagName]\n```\n\n查看tag信息\n\n```shell\ngit show [tag]\n```\n\n提交指定tag\n\n```shell\ngit push [remote] [tag]\n```\n\n提交所有tag\n\n```shell\ngit push [remote] --tags\n```\n\n新建一个分支，指向某个tag\n\n```shell\ngit checkout -b [branch] [tag]\n```\n\n## 查看信息\n\n显示有变更的文件\n\n```shell\ngit status\n```\n\n显示当前分支的版本历史\n\n```shell\ngit log\n```\n\n显示commit历史，以及每次commit发生变更的文件\n\n```shell\ngit log --stat\n```\n\n搜索提交历史，根据关键词\n\n```shell\ngit log -S [keyword]\n```\n\n显示某个commit之后的所有变动，每个commit占据一行\n\n```shell\ngit log [tag] HEAD --pretty=format:%s\n```\n\n显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n\n```shell\ngit log [tag] HEAD --grep feature\n```\n\n显示某个文件的版本历史，包括文件改名\n\n```shell\ngit log --follow [file]\ngit whatchanged [file]\n```\n\n显示指定文件相关的每一次diff\n\n```shell\ngit log -p [file]\n```\n\n显示过去5次提交\n\n```shell\ngit log -5 --pretty --oneline\n```\n\n显示所有提交过的用户，按提交次数排序\n\n```shell\ngit shortlog -sn\n```\n\n显示指定文件是什么人在什么时间修改过\n\n```shell\ngit blame [file]\n```\n\n显示暂存区和工作区的差异\n\n```shell\ngit diff\n```\n\n显示暂存区和上一个commit的差异\n\n```shell\ngit diff --cached [file]\n```\n\n显示工作区与当前分支最新commit之间的差异\n\n```shell\ngit diff HEAD\n```\n\n显示两次提交之间的差异\n\n```shell\ngit diff [first-branch]...[second-branch]\n```\n\n显示今天你写了多少行代码\n\n```shell\ngit diff --shortstat \"@{0 day ago}\"\n```\n\n显示某次提交的元数据和内容变化\n\n```shell\ngit show [commit]\n```\n\n显示某次提交发生变化的文件\n\n```shell\ngit show --name-only [commit]\n```\n\n显示某次提交时，某个文件的内容\n\n```shell\ngit show [commit]:[filename]\n```\n\n显示当前分支的最近几次提交\n\n```shell\ngit reflog\n```\n\n## 远程同步\n\n下载远程仓库的所有变动\n\n```shell\ngit fetch [remote]\n```\n\n显示所有远程仓库\n\n```shell\ngit remote -v\n```\n\n显示某个远程仓库的信息\n\n```shell\ngit remote show [remote]\n```\n\n增加一个新的远程仓库，并命名\n\n```shell\ngit remote add [shortname] [url]\n```\n\n取回远程仓库的变化，并与本地分支合并\n\n```shell\ngit pull [remote] [branch]\n```\n\n上传本地指定分支到远程仓库\n\n```shell\ngit push [remote] [branch]\n```\n\n强行推送当前分支到远程仓库，即使有冲突\n\n```shell\ngit push [remote] --force\n```\n\n推送所有分支到远程仓库\n\n```shell\ngit push [remote] --all\n```\n\n## 撤销\n\n恢复暂存区的指定文件到工作区\n\n```shell\ngit checkout [file]\n```\n\n恢复某个commit的指定文件到暂存区和工作区\n\n```shell\ngit checkout [commit] [file]\n```\n\n恢复暂存区的所有文件到工作区\n\n```shell\ngit checkout .\n```\n\n重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n\n```shell\ngit reset [file]\n```\n\n重置暂存区与工作区，与上一次commit保持一致\n\n```shell\ngit reset --hard\n```\n\n重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n\n```shell\ngit reset [commit]\n```\n\n重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n\n```shell\ngit reset --hard [commit]\n```\n\n重置当前HEAD为指定commit，但保持暂存区和工作区不变\n\n```shell\ngit reset --keep [commit]\n```\n\n新建一个commit，用来撤销指定commit，后者的所有变化都将被前者抵消，并且应用到当前分支\n\n```shell\ngit revert [commit]\n```\n\n暂时将未提交的变化移除，稍后再移入\n\n```shell\ngit stash\ngit stash pop\n```\n\n## 其他\n\n生成一个可供发布的压缩包\n\n```shell\ngit archive\n```\n","source":"_posts/git常用命令.md","raw":"---\ntitle: Git常用命令\ndate: 2021-05-08 18:03:19\ncategories: Git\ntags:\n- Git\n# sticky: 100\npic:\ncomments: true\ntoc: true\nonly:\n- home\n- category\n- tag\n---\n\n# Git常用命令\n\n## 仓库\n\n在当前目录新建一个Git代码库\n\n```shell\ngit init\n```\n\n新建一个目录，将其初始化为Git代码库\n\n```shell\ngit init [project-name]\n```\n\n下载一个项目和它的整个代码历史\n\n```shell\ngit clone [url]\n```\n\n## 配置\n\n显示当前的Git配置\n\n```shell\ngit config --list\n```\n\n编辑Git配置文件\n\n```shell\ngit config -e [--global]\n```\n\n设置提交代码时的用户信息\n\n```shell\ngit config [--global] user.name \"[name]\"\ngit config [--global] user.email \"[email address]\"\n```\n\n## 增加/删除文件\n\n添加指定文件到暂存区\n\n```shell\ngit add [file1] [file2] ...\n```\n\n添加指定目录到暂存区，包括子目录\n\n```shell\ngit add [dir]\n```\n\n添加当前目录的所有文件到暂存区\n\n```shell\ngit add .\n```\n\n## 添加每个变化前，都会要求确认\n\n对于同一个文件的多处变化，可以实现分次提交\n\n```shell\ngit add -p\n````\n\n删除工作区文件，并且将这次删除放入暂存区\n\n```shell\ngit rm [file1] [file2] ...\n```\n\n停止追踪指定文件，但该文件会保留在工作区\n\n```shell\ngit rm --cached [file]\n```\n\n改名文件，并且将这个改名放入暂存区\n\n```shell\ngit mv [file-original] [file-renamed]\n```\n\n## 代码提交\n\n提交暂存区到仓库区\n\n```shell\ngit commit -m [message]\n```\n\n提交暂存区的指定文件到仓库区\n\n```shell\ngit commit [file1] [file2] ... -m [message]\n```\n\n提交工作区自上次commit之后的变化，直接到仓库区\n\n```shell\ngit commit -a\n```\n\n提交时显示所有diff信息\n\n```shell\ngit commit -v\n```\n\n使用一次新的commit，替代上一次提交,如果代码没有任何新变化，则用来改写上一次commit的提交信息\n\n```shell\ngit commit --amend -m [message]\n```\n\n重做上一次commit，并包括指定文件的新变化\n\n```shell\ngit commit --amend [file1] [file2] ...\n```\n\n## 分支\n\n列出所有本地分支\n\n```shell\ngit branch\n```\n\n列出所有远程分支\n\n```shell\ngit branch -r\n```\n\n列出所有本地分支和远程分支\n\n```shell\ngit branch -a\n```\n\n新建一个分支，但依然停留在当前分支\n\n```shell\ngit branch [branch-name]\n```\n\n新建一个分支，并切换到该分支\n\n```shell\ngit checkout -b [branch]\n```\n\n新建一个分支，指向指定commit\n\n```shell\ngit branch [branch] [commit]\n```\n\n新建一个分支，与指定的远程分支建立追踪关系\n\n```shell\ngit branch --track [branch] [remote-branch]\n```\n\n切换到指定分支，并更新工作区\n\n```shell\ngit checkout [branch-name]\n```\n\n切换到上一个分支\n\n```shell\ngit checkout -\n```\n\n建立追踪关系，在现有分支与指定的远程分支之间\n\n```shell\ngit branch --set-upstream [branch] [remote-branch]\n```\n\n合并指定分支到当前分支\n\n```shell\ngit merge [branch]\n```\n\n选择一个commit，合并进当前分支\n\n```shell\ngit cherry-pick [commit]\n```\n\n删除分支\n\n```shell\ngit branch -d [branch-name]\n```\n\n删除远程分支\n\n```shell\ngit push origin --delete [branch-name]\ngit branch -dr [remote/branch]\n```\n\n## 标签\n\n列出所有tag\n\n```shell\ngit tag\n```\n\n新建一个tag在当前commit\n\n```shell\ngit tag [tag]\n```\n\n新建一个tag在指定commit\n\n```shell\ngit tag [tag] [commit]\n```\n\n删除本地tag\n\n```shell\ngit tag -d [tag]\n```\n\n删除远程tag\n\n```shell\ngit push origin :refs/tags/[tagName]\n```\n\n查看tag信息\n\n```shell\ngit show [tag]\n```\n\n提交指定tag\n\n```shell\ngit push [remote] [tag]\n```\n\n提交所有tag\n\n```shell\ngit push [remote] --tags\n```\n\n新建一个分支，指向某个tag\n\n```shell\ngit checkout -b [branch] [tag]\n```\n\n## 查看信息\n\n显示有变更的文件\n\n```shell\ngit status\n```\n\n显示当前分支的版本历史\n\n```shell\ngit log\n```\n\n显示commit历史，以及每次commit发生变更的文件\n\n```shell\ngit log --stat\n```\n\n搜索提交历史，根据关键词\n\n```shell\ngit log -S [keyword]\n```\n\n显示某个commit之后的所有变动，每个commit占据一行\n\n```shell\ngit log [tag] HEAD --pretty=format:%s\n```\n\n显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n\n```shell\ngit log [tag] HEAD --grep feature\n```\n\n显示某个文件的版本历史，包括文件改名\n\n```shell\ngit log --follow [file]\ngit whatchanged [file]\n```\n\n显示指定文件相关的每一次diff\n\n```shell\ngit log -p [file]\n```\n\n显示过去5次提交\n\n```shell\ngit log -5 --pretty --oneline\n```\n\n显示所有提交过的用户，按提交次数排序\n\n```shell\ngit shortlog -sn\n```\n\n显示指定文件是什么人在什么时间修改过\n\n```shell\ngit blame [file]\n```\n\n显示暂存区和工作区的差异\n\n```shell\ngit diff\n```\n\n显示暂存区和上一个commit的差异\n\n```shell\ngit diff --cached [file]\n```\n\n显示工作区与当前分支最新commit之间的差异\n\n```shell\ngit diff HEAD\n```\n\n显示两次提交之间的差异\n\n```shell\ngit diff [first-branch]...[second-branch]\n```\n\n显示今天你写了多少行代码\n\n```shell\ngit diff --shortstat \"@{0 day ago}\"\n```\n\n显示某次提交的元数据和内容变化\n\n```shell\ngit show [commit]\n```\n\n显示某次提交发生变化的文件\n\n```shell\ngit show --name-only [commit]\n```\n\n显示某次提交时，某个文件的内容\n\n```shell\ngit show [commit]:[filename]\n```\n\n显示当前分支的最近几次提交\n\n```shell\ngit reflog\n```\n\n## 远程同步\n\n下载远程仓库的所有变动\n\n```shell\ngit fetch [remote]\n```\n\n显示所有远程仓库\n\n```shell\ngit remote -v\n```\n\n显示某个远程仓库的信息\n\n```shell\ngit remote show [remote]\n```\n\n增加一个新的远程仓库，并命名\n\n```shell\ngit remote add [shortname] [url]\n```\n\n取回远程仓库的变化，并与本地分支合并\n\n```shell\ngit pull [remote] [branch]\n```\n\n上传本地指定分支到远程仓库\n\n```shell\ngit push [remote] [branch]\n```\n\n强行推送当前分支到远程仓库，即使有冲突\n\n```shell\ngit push [remote] --force\n```\n\n推送所有分支到远程仓库\n\n```shell\ngit push [remote] --all\n```\n\n## 撤销\n\n恢复暂存区的指定文件到工作区\n\n```shell\ngit checkout [file]\n```\n\n恢复某个commit的指定文件到暂存区和工作区\n\n```shell\ngit checkout [commit] [file]\n```\n\n恢复暂存区的所有文件到工作区\n\n```shell\ngit checkout .\n```\n\n重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n\n```shell\ngit reset [file]\n```\n\n重置暂存区与工作区，与上一次commit保持一致\n\n```shell\ngit reset --hard\n```\n\n重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n\n```shell\ngit reset [commit]\n```\n\n重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n\n```shell\ngit reset --hard [commit]\n```\n\n重置当前HEAD为指定commit，但保持暂存区和工作区不变\n\n```shell\ngit reset --keep [commit]\n```\n\n新建一个commit，用来撤销指定commit，后者的所有变化都将被前者抵消，并且应用到当前分支\n\n```shell\ngit revert [commit]\n```\n\n暂时将未提交的变化移除，稍后再移入\n\n```shell\ngit stash\ngit stash pop\n```\n\n## 其他\n\n生成一个可供发布的压缩包\n\n```shell\ngit archive\n```\n","slug":"git常用命令","published":1,"updated":"2021-05-09T14:34:44.000Z","layout":"post","photos":[],"link":"","_id":"ckoha427h0001y0xu5o9r0pkl","content":"<h1 id=\"Git常用命令\"><a href=\"#Git常用命令\" class=\"headerlink\" title=\"Git常用命令\"></a>Git常用命令</h1><h2 id=\"仓库\"><a href=\"#仓库\" class=\"headerlink\" title=\"仓库\"></a>仓库</h2><p>在当前目录新建一个Git代码库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n\n<p>新建一个目录，将其初始化为Git代码库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init [project-name]</span><br></pre></td></tr></table></figure>\n\n<p>下载一个项目和它的整个代码历史</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone [url]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>显示当前的Git配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n\n<p>编辑Git配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config -e [--global]</span><br></pre></td></tr></table></figure>\n\n<p>设置提交代码时的用户信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config [--global] user.name &quot;[name]&quot;</span><br><span class=\"line\">git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"增加-删除文件\"><a href=\"#增加-删除文件\" class=\"headerlink\" title=\"增加/删除文件\"></a>增加/删除文件</h2><p>添加指定文件到暂存区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n\n<p>添加指定目录到暂存区，包括子目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add [dir]</span><br></pre></td></tr></table></figure>\n\n<p>添加当前目录的所有文件到暂存区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加每个变化前，都会要求确认\"><a href=\"#添加每个变化前，都会要求确认\" class=\"headerlink\" title=\"添加每个变化前，都会要求确认\"></a>添加每个变化前，都会要求确认</h2><p>对于同一个文件的多处变化，可以实现分次提交</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -p</span><br><span class=\"line\">````</span><br><span class=\"line\"></span><br><span class=\"line\">删除工作区文件，并且将这次删除放入暂存区</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">git rm [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n\n<p>停止追踪指定文件，但该文件会保留在工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached [file]</span><br></pre></td></tr></table></figure>\n\n<p>改名文件，并且将这个改名放入暂存区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码提交\"><a href=\"#代码提交\" class=\"headerlink\" title=\"代码提交\"></a>代码提交</h2><p>提交暂存区到仓库区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m [message]</span><br></pre></td></tr></table></figure>\n\n<p>提交暂存区的指定文件到仓库区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit [file1] [file2] ... -m [message]</span><br></pre></td></tr></table></figure>\n\n<p>提交工作区自上次commit之后的变化，直接到仓库区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -a</span><br></pre></td></tr></table></figure>\n\n<p>提交时显示所有diff信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -v</span><br></pre></td></tr></table></figure>\n\n<p>使用一次新的commit，替代上一次提交,如果代码没有任何新变化，则用来改写上一次commit的提交信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit --amend -m [message]</span><br></pre></td></tr></table></figure>\n\n<p>重做上一次commit，并包括指定文件的新变化</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h2><p>列出所有本地分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch</span><br></pre></td></tr></table></figure>\n\n<p>列出所有远程分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -r</span><br></pre></td></tr></table></figure>\n\n<p>列出所有本地分支和远程分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -a</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，但依然停留在当前分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch [branch-name]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，并切换到该分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b [branch]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，指向指定commit</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch [branch] [commit]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，与指定的远程分支建立追踪关系</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --track [branch] [remote-branch]</span><br></pre></td></tr></table></figure>\n\n<p>切换到指定分支，并更新工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout [branch-name]</span><br></pre></td></tr></table></figure>\n\n<p>切换到上一个分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -</span><br></pre></td></tr></table></figure>\n\n<p>建立追踪关系，在现有分支与指定的远程分支之间</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --set-upstream [branch] [remote-branch]</span><br></pre></td></tr></table></figure>\n\n<p>合并指定分支到当前分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge [branch]</span><br></pre></td></tr></table></figure>\n\n<p>选择一个commit，合并进当前分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick [commit]</span><br></pre></td></tr></table></figure>\n\n<p>删除分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d [branch-name]</span><br></pre></td></tr></table></figure>\n\n<p>删除远程分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --delete [branch-name]</span><br><span class=\"line\">git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h2><p>列出所有tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n\n<p>新建一个tag在当前commit</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag [tag]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个tag在指定commit</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag [tag] [commit]</span><br></pre></td></tr></table></figure>\n\n<p>删除本地tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d [tag]</span><br></pre></td></tr></table></figure>\n\n<p>删除远程tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin :refs/tags/[tagName]</span><br></pre></td></tr></table></figure>\n\n<p>查看tag信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show [tag]</span><br></pre></td></tr></table></figure>\n\n<p>提交指定tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] [tag]</span><br></pre></td></tr></table></figure>\n\n<p>提交所有tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] --tags</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，指向某个tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h2><p>显示有变更的文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p>显示当前分支的版本历史</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n\n<p>显示commit历史，以及每次commit发生变更的文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --stat</span><br></pre></td></tr></table></figure>\n\n<p>搜索提交历史，根据关键词</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -S [keyword]</span><br></pre></td></tr></table></figure>\n\n<p>显示某个commit之后的所有变动，每个commit占据一行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log [tag] HEAD --pretty=format:%s</span><br></pre></td></tr></table></figure>\n\n<p>显示某个commit之后的所有变动，其”提交说明”必须符合搜索条件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log [tag] HEAD --grep feature</span><br></pre></td></tr></table></figure>\n\n<p>显示某个文件的版本历史，包括文件改名</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --follow [file]</span><br><span class=\"line\">git whatchanged [file]</span><br></pre></td></tr></table></figure>\n\n<p>显示指定文件相关的每一次diff</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -p [file]</span><br></pre></td></tr></table></figure>\n\n<p>显示过去5次提交</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -5 --pretty --oneline</span><br></pre></td></tr></table></figure>\n\n<p>显示所有提交过的用户，按提交次数排序</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git shortlog -sn</span><br></pre></td></tr></table></figure>\n\n<p>显示指定文件是什么人在什么时间修改过</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git blame [file]</span><br></pre></td></tr></table></figure>\n\n<p>显示暂存区和工作区的差异</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff</span><br></pre></td></tr></table></figure>\n\n<p>显示暂存区和上一个commit的差异</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff --cached [file]</span><br></pre></td></tr></table></figure>\n\n<p>显示工作区与当前分支最新commit之间的差异</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff HEAD</span><br></pre></td></tr></table></figure>\n\n<p>显示两次提交之间的差异</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff [first-branch]...[second-branch]</span><br></pre></td></tr></table></figure>\n\n<p>显示今天你写了多少行代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;</span><br></pre></td></tr></table></figure>\n\n<p>显示某次提交的元数据和内容变化</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show [commit]</span><br></pre></td></tr></table></figure>\n\n<p>显示某次提交发生变化的文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show --name-only [commit]</span><br></pre></td></tr></table></figure>\n\n<p>显示某次提交时，某个文件的内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show [commit]:[filename]</span><br></pre></td></tr></table></figure>\n\n<p>显示当前分支的最近几次提交</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"远程同步\"><a href=\"#远程同步\" class=\"headerlink\" title=\"远程同步\"></a>远程同步</h2><p>下载远程仓库的所有变动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch [remote]</span><br></pre></td></tr></table></figure>\n\n<p>显示所有远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n<p>显示某个远程仓库的信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote show [remote]</span><br></pre></td></tr></table></figure>\n\n<p>增加一个新的远程仓库，并命名</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add [shortname] [url]</span><br></pre></td></tr></table></figure>\n\n<p>取回远程仓库的变化，并与本地分支合并</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull [remote] [branch]</span><br></pre></td></tr></table></figure>\n\n<p>上传本地指定分支到远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] [branch]</span><br></pre></td></tr></table></figure>\n\n<p>强行推送当前分支到远程仓库，即使有冲突</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] --force</span><br></pre></td></tr></table></figure>\n\n<p>推送所有分支到远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] --all</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h2><p>恢复暂存区的指定文件到工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout [file]</span><br></pre></td></tr></table></figure>\n\n<p>恢复某个commit的指定文件到暂存区和工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout [commit] [file]</span><br></pre></td></tr></table></figure>\n\n<p>恢复暂存区的所有文件到工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout .</span><br></pre></td></tr></table></figure>\n\n<p>重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset [file]</span><br></pre></td></tr></table></figure>\n\n<p>重置暂存区与工作区，与上一次commit保持一致</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard</span><br></pre></td></tr></table></figure>\n\n<p>重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset [commit]</span><br></pre></td></tr></table></figure>\n\n<p>重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard [commit]</span><br></pre></td></tr></table></figure>\n\n<p>重置当前HEAD为指定commit，但保持暂存区和工作区不变</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --keep [commit]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个commit，用来撤销指定commit，后者的所有变化都将被前者抵消，并且应用到当前分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git revert [commit]</span><br></pre></td></tr></table></figure>\n\n<p>暂时将未提交的变化移除，稍后再移入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash</span><br><span class=\"line\">git stash pop</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>生成一个可供发布的压缩包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git archive</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Git常用命令\"><a href=\"#Git常用命令\" class=\"headerlink\" title=\"Git常用命令\"></a>Git常用命令</h1><h2 id=\"仓库\"><a href=\"#仓库\" class=\"headerlink\" title=\"仓库\"></a>仓库</h2><p>在当前目录新建一个Git代码库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n\n<p>新建一个目录，将其初始化为Git代码库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init [project-name]</span><br></pre></td></tr></table></figure>\n\n<p>下载一个项目和它的整个代码历史</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone [url]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>显示当前的Git配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n\n<p>编辑Git配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config -e [--global]</span><br></pre></td></tr></table></figure>\n\n<p>设置提交代码时的用户信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config [--global] user.name &quot;[name]&quot;</span><br><span class=\"line\">git config [--global] user.email &quot;[email address]&quot;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"增加-删除文件\"><a href=\"#增加-删除文件\" class=\"headerlink\" title=\"增加/删除文件\"></a>增加/删除文件</h2><p>添加指定文件到暂存区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n\n<p>添加指定目录到暂存区，包括子目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add [dir]</span><br></pre></td></tr></table></figure>\n\n<p>添加当前目录的所有文件到暂存区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add .</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加每个变化前，都会要求确认\"><a href=\"#添加每个变化前，都会要求确认\" class=\"headerlink\" title=\"添加每个变化前，都会要求确认\"></a>添加每个变化前，都会要求确认</h2><p>对于同一个文件的多处变化，可以实现分次提交</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -p</span><br><span class=\"line\">````</span><br><span class=\"line\"></span><br><span class=\"line\">删除工作区文件，并且将这次删除放入暂存区</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">git rm [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n\n<p>停止追踪指定文件，但该文件会保留在工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached [file]</span><br></pre></td></tr></table></figure>\n\n<p>改名文件，并且将这个改名放入暂存区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git mv [file-original] [file-renamed]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"代码提交\"><a href=\"#代码提交\" class=\"headerlink\" title=\"代码提交\"></a>代码提交</h2><p>提交暂存区到仓库区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m [message]</span><br></pre></td></tr></table></figure>\n\n<p>提交暂存区的指定文件到仓库区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit [file1] [file2] ... -m [message]</span><br></pre></td></tr></table></figure>\n\n<p>提交工作区自上次commit之后的变化，直接到仓库区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -a</span><br></pre></td></tr></table></figure>\n\n<p>提交时显示所有diff信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -v</span><br></pre></td></tr></table></figure>\n\n<p>使用一次新的commit，替代上一次提交,如果代码没有任何新变化，则用来改写上一次commit的提交信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit --amend -m [message]</span><br></pre></td></tr></table></figure>\n\n<p>重做上一次commit，并包括指定文件的新变化</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"分支\"><a href=\"#分支\" class=\"headerlink\" title=\"分支\"></a>分支</h2><p>列出所有本地分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch</span><br></pre></td></tr></table></figure>\n\n<p>列出所有远程分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -r</span><br></pre></td></tr></table></figure>\n\n<p>列出所有本地分支和远程分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -a</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，但依然停留在当前分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch [branch-name]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，并切换到该分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b [branch]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，指向指定commit</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch [branch] [commit]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，与指定的远程分支建立追踪关系</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --track [branch] [remote-branch]</span><br></pre></td></tr></table></figure>\n\n<p>切换到指定分支，并更新工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout [branch-name]</span><br></pre></td></tr></table></figure>\n\n<p>切换到上一个分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -</span><br></pre></td></tr></table></figure>\n\n<p>建立追踪关系，在现有分支与指定的远程分支之间</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --set-upstream [branch] [remote-branch]</span><br></pre></td></tr></table></figure>\n\n<p>合并指定分支到当前分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge [branch]</span><br></pre></td></tr></table></figure>\n\n<p>选择一个commit，合并进当前分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git cherry-pick [commit]</span><br></pre></td></tr></table></figure>\n\n<p>删除分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch -d [branch-name]</span><br></pre></td></tr></table></figure>\n\n<p>删除远程分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin --delete [branch-name]</span><br><span class=\"line\">git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h2><p>列出所有tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag</span><br></pre></td></tr></table></figure>\n\n<p>新建一个tag在当前commit</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag [tag]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个tag在指定commit</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag [tag] [commit]</span><br></pre></td></tr></table></figure>\n\n<p>删除本地tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git tag -d [tag]</span><br></pre></td></tr></table></figure>\n\n<p>删除远程tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin :refs/tags/[tagName]</span><br></pre></td></tr></table></figure>\n\n<p>查看tag信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show [tag]</span><br></pre></td></tr></table></figure>\n\n<p>提交指定tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] [tag]</span><br></pre></td></tr></table></figure>\n\n<p>提交所有tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] --tags</span><br></pre></td></tr></table></figure>\n\n<p>新建一个分支，指向某个tag</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查看信息\"><a href=\"#查看信息\" class=\"headerlink\" title=\"查看信息\"></a>查看信息</h2><p>显示有变更的文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n\n<p>显示当前分支的版本历史</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log</span><br></pre></td></tr></table></figure>\n\n<p>显示commit历史，以及每次commit发生变更的文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --stat</span><br></pre></td></tr></table></figure>\n\n<p>搜索提交历史，根据关键词</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -S [keyword]</span><br></pre></td></tr></table></figure>\n\n<p>显示某个commit之后的所有变动，每个commit占据一行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log [tag] HEAD --pretty=format:%s</span><br></pre></td></tr></table></figure>\n\n<p>显示某个commit之后的所有变动，其”提交说明”必须符合搜索条件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log [tag] HEAD --grep feature</span><br></pre></td></tr></table></figure>\n\n<p>显示某个文件的版本历史，包括文件改名</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log --follow [file]</span><br><span class=\"line\">git whatchanged [file]</span><br></pre></td></tr></table></figure>\n\n<p>显示指定文件相关的每一次diff</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -p [file]</span><br></pre></td></tr></table></figure>\n\n<p>显示过去5次提交</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git log -5 --pretty --oneline</span><br></pre></td></tr></table></figure>\n\n<p>显示所有提交过的用户，按提交次数排序</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git shortlog -sn</span><br></pre></td></tr></table></figure>\n\n<p>显示指定文件是什么人在什么时间修改过</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git blame [file]</span><br></pre></td></tr></table></figure>\n\n<p>显示暂存区和工作区的差异</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff</span><br></pre></td></tr></table></figure>\n\n<p>显示暂存区和上一个commit的差异</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff --cached [file]</span><br></pre></td></tr></table></figure>\n\n<p>显示工作区与当前分支最新commit之间的差异</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff HEAD</span><br></pre></td></tr></table></figure>\n\n<p>显示两次提交之间的差异</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff [first-branch]...[second-branch]</span><br></pre></td></tr></table></figure>\n\n<p>显示今天你写了多少行代码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git diff --shortstat &quot;@&#123;0 day ago&#125;&quot;</span><br></pre></td></tr></table></figure>\n\n<p>显示某次提交的元数据和内容变化</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show [commit]</span><br></pre></td></tr></table></figure>\n\n<p>显示某次提交发生变化的文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show --name-only [commit]</span><br></pre></td></tr></table></figure>\n\n<p>显示某次提交时，某个文件的内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git show [commit]:[filename]</span><br></pre></td></tr></table></figure>\n\n<p>显示当前分支的最近几次提交</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reflog</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"远程同步\"><a href=\"#远程同步\" class=\"headerlink\" title=\"远程同步\"></a>远程同步</h2><p>下载远程仓库的所有变动</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git fetch [remote]</span><br></pre></td></tr></table></figure>\n\n<p>显示所有远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote -v</span><br></pre></td></tr></table></figure>\n\n<p>显示某个远程仓库的信息</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote show [remote]</span><br></pre></td></tr></table></figure>\n\n<p>增加一个新的远程仓库，并命名</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add [shortname] [url]</span><br></pre></td></tr></table></figure>\n\n<p>取回远程仓库的变化，并与本地分支合并</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git pull [remote] [branch]</span><br></pre></td></tr></table></figure>\n\n<p>上传本地指定分支到远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] [branch]</span><br></pre></td></tr></table></figure>\n\n<p>强行推送当前分支到远程仓库，即使有冲突</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] --force</span><br></pre></td></tr></table></figure>\n\n<p>推送所有分支到远程仓库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push [remote] --all</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"撤销\"><a href=\"#撤销\" class=\"headerlink\" title=\"撤销\"></a>撤销</h2><p>恢复暂存区的指定文件到工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout [file]</span><br></pre></td></tr></table></figure>\n\n<p>恢复某个commit的指定文件到暂存区和工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout [commit] [file]</span><br></pre></td></tr></table></figure>\n\n<p>恢复暂存区的所有文件到工作区</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout .</span><br></pre></td></tr></table></figure>\n\n<p>重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset [file]</span><br></pre></td></tr></table></figure>\n\n<p>重置暂存区与工作区，与上一次commit保持一致</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard</span><br></pre></td></tr></table></figure>\n\n<p>重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset [commit]</span><br></pre></td></tr></table></figure>\n\n<p>重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard [commit]</span><br></pre></td></tr></table></figure>\n\n<p>重置当前HEAD为指定commit，但保持暂存区和工作区不变</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --keep [commit]</span><br></pre></td></tr></table></figure>\n\n<p>新建一个commit，用来撤销指定commit，后者的所有变化都将被前者抵消，并且应用到当前分支</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git revert [commit]</span><br></pre></td></tr></table></figure>\n\n<p>暂时将未提交的变化移除，稍后再移入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash</span><br><span class=\"line\">git stash pop</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>生成一个可供发布的压缩包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git archive</span><br></pre></td></tr></table></figure>\n"},{"title":"爬虫基础原理","date":"2021-05-09T23:24:23.000Z","pic":null,"comments":1,"toc":true,"only":["home","category","tag"],"_content":"\n# http基本原理\n\n## URI和URL\n\nURI （Uniform Resource Identifier） 即**统一资源标志符**\nURL （Uniform Resource Locator 即**统一资源定位符**\n\n例如：\n`https://github.com/favicon.ico`既是一个URL，也是一个URI。\n\n","source":"_posts/爬虫基础原理.md","raw":"---\ntitle: 爬虫基础原理\ndate: 2021-05-10 07:24:23\ncategories: 爬虫\ntags:\n- Http\n# sticky: 100\npic:\ncomments: true\ntoc: true\nonly:\n- home\n- category\n- tag\n---\n\n# http基本原理\n\n## URI和URL\n\nURI （Uniform Resource Identifier） 即**统一资源标志符**\nURL （Uniform Resource Locator 即**统一资源定位符**\n\n例如：\n`https://github.com/favicon.ico`既是一个URL，也是一个URI。\n\n","slug":"爬虫基础原理","published":1,"updated":"2021-05-09T23:38:54.000Z","layout":"post","photos":[],"link":"","_id":"ckohtiq6g0000twxubksiga8t","content":"<h1 id=\"http基本原理\"><a href=\"#http基本原理\" class=\"headerlink\" title=\"http基本原理\"></a>http基本原理</h1><h2 id=\"URI和URL\"><a href=\"#URI和URL\" class=\"headerlink\" title=\"URI和URL\"></a>URI和URL</h2><p>URI （Uniform Resource Identifier） 即<strong>统一资源标志符</strong><br>URL （Uniform Resource Locator 即<strong>统一资源定位符</strong></p>\n<p>例如：<br><code>https://github.com/favicon.ico</code>既是一个URL，也是一个URI。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"http基本原理\"><a href=\"#http基本原理\" class=\"headerlink\" title=\"http基本原理\"></a>http基本原理</h1><h2 id=\"URI和URL\"><a href=\"#URI和URL\" class=\"headerlink\" title=\"URI和URL\"></a>URI和URL</h2><p>URI （Uniform Resource Identifier） 即<strong>统一资源标志符</strong><br>URL （Uniform Resource Locator 即<strong>统一资源定位符</strong></p>\n<p>例如：<br><code>https://github.com/favicon.ico</code>既是一个URL，也是一个URI。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckoha42790000y0xu303kele2","category_id":"ckoha427k0002y0xuah4106mn","_id":"ckoha427r0007y0xu8v8a38wo"},{"post_id":"ckoha427h0001y0xu5o9r0pkl","category_id":"ckoha427p0004y0xu08bwf1ay","_id":"ckoha427s0009y0xufqhyd0py"},{"post_id":"ckohtiq6g0000twxubksiga8t","category_id":"ckohtiq6q0001twxu2d9j2oc9","_id":"ckohtiq6u0004twxueyumh6o5"}],"PostTag":[{"post_id":"ckoha42790000y0xu303kele2","tag_id":"ckoha427n0003y0xu4jez93i4","_id":"ckoha427q0006y0xuf2tcglnk"},{"post_id":"ckoha427h0001y0xu5o9r0pkl","tag_id":"ckoha427p0005y0xud0fa5hj4","_id":"ckoha427s0008y0xuehe6cu7g"},{"post_id":"ckohtiq6g0000twxubksiga8t","tag_id":"ckohtiq6s0002twxud44z2g85","_id":"ckohtiq6t0003twxuae3y6p03"}],"Tag":[{"name":"Hexo","_id":"ckoha427n0003y0xu4jez93i4"},{"name":"Git","_id":"ckoha427p0005y0xud0fa5hj4"},{"name":"Http","_id":"ckohtiq6s0002twxud44z2g85"}]}}